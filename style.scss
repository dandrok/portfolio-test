$linkYellow: rgb(254, 246, 37);
$linkBlack: rgb(64, 60, 53);
$linkWhite: rgb(252, 252, 252);

$small: 400px;
$h-small: 700px;
$medium: 900px;
$h-medium: 1280px;

html {
  scroll-behavior: smooth;
}

.email-one:hover svg {
  transform: rotate(-45deg);
}
.email-one:hover h2 {
  background-size: 100% 88%;
}

body {
  font-family: 'Ubuntu Mono', monospace !important;
  max-width: 90vw;
  margin: 0 auto !important;
  float: none !important;
  font-size: 100%;
  color: $linkBlack;
  background-color: $linkWhite;
}

a {
  text-decoration: none;
  color: $linkBlack;
}

.simple-tippy {
  font-weight: 700;
}

.title-main {
  width: 290px;
  h2 {
    font-size: 2.25rem;
    text-transform: uppercase;
    background-image: linear-gradient(120deg, $linkYellow 0%, $linkYellow 100%);
    background-repeat: no-repeat;
    background-size: 100% 0.3em;
    background-position: 0 88%;
    transition: background-size 0.3s ease-in;
    transform-origin: 0 0; //rotate
    transform: rotate(-90deg); //rotate
    &:hover {
      background-size: 100% 88%;
      cursor: vertical-text;
    }
  }
}

span {
  font-weight: 700;
  background-image: linear-gradient(120deg, #fef625 0%, #fef625 100%);
  background-repeat: no-repeat;
  background-size: 100% 0.3em;
  background-position: 0 88%;
  transition: background-size 0.3s ease-in;
  &:hover {
    background-size: 100% 88%;
  }
}

.cool-link {
  display: inline-block;
  color: $linkBlack;
  text-decoration: none;
}

.cool-link::after {
  content: '';
  display: block;
  width: 0;
  height: 2px;
  background: $linkYellow;
  transition: width 0.3s;
}

.cool-link:hover::after {
  width: 100%;
  //transition: width .3s;
}

#navbar {
  display: grid;
  min-height: 40px;
  grid-auto-flow: column;
  grid-gap: 1.5em;

  .logo {
    display: grid;
    justify-content: start;
    align-content: center;
    font-size: 56px;
    font-family: 'Poiret One', cursive;
    a {
      transform: rotate(-90deg);
      transition: all 1s;
      transition-timing: ease-out;

      &:hover {
        transform: rotate(1deg);
      }
    }
  }
  .nav {
    display: grid;
    justify-content: right;
    align-content: center;
    grid-auto-flow: column;
    grid-gap: 6em;
    font-size: 1.5rem;
    a {
      margin-bottom: 10px;
    }
    @media screen and (max-width: $h-medium) {
      grid-gap: 3em;
    }
    @media screen and (max-width: $medium) {
      grid-gap: 2em;
    }
    @media screen and (max-width: $small) {
      grid-gap: 1em;
    }
  }
}

#hero {
  .cointainer-hero {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    margin-top: 5vw;
    margin-bottom: 3vw;
    h1 {
      grid-column: 1 / span 10;
      font-size: 7rem;
    }
    @media screen and (max-width: $h-medium) {
      h1 {
        font-size: 7rem;
        grid-column: 1 / span 12;
      }
    }
    @media screen and (max-width: $medium) {
      h1 {
        font-size: 5rem;
        grid-column: 1 / span 12;
      }
    }
    @media screen and (max-width: $h-small) {
      h1 {
        font-size: 4rem;
        grid-column: 1 / span 12;
      }
    }
    @media screen and (max-width: $small) {
      h1 {
        font-size: 3rem;
        grid-column: 1 / span 12;
      }
    }
  }
  .arrow {
    position: relative;
    left: 33%;
    padding-bottom: 2vw;
    max-width: 32px;
    svg {
      height: auto;
      width: 32px;
      transition: all 0.2s;
      transition-timing: ease-in-out;
    }
    svg:hover {
      transform: translate(0, 5px);
    }
    @media screen and (max-width: $h-medium) {
      left: 40%;
    }
    @media screen and (max-width: $medium) {
      left: 50%;
    }
    @media screen and (max-width: $small) {
      left: 50%;
    }
  }
}

main {
  .kreska {
    content: ''; /* This is necessary for the pseudo element to work. */
    display: block; /* This will put the pseudo element on its own line. */
    /* This will center the border. */
    width: 66%; /* Change this to whatever width you want. */
    padding-top: 2vw; /* This creates some space between the element and the border. */
    border-top: $linkBlack solid 1px; /* This creates the border. Replace black with whatever color you want. */

    @media screen and (max-width: $h-medium) {
      width: 80%;
    }
    @media screen and (max-width: $medium) {
      width: 100%;
    }
    @media screen and (max-width: $small) {
      width: 100%;
    }
  }
  #latest-projects {
    .cointainer-projects {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 1fr 1fr;
      gap: 10px 10px;
      grid-template-areas:
        '. .'
        '. .';
      max-width: 600px;
      margin-left: 50px; // margines meidzy ukosnym
      .div-project {
        border: $linkBlack solid 1px;
        width: 300px;
        padding: 10px;
        background-color: $linkYellow;
        transition: all 0.2s ease-in-out;
        h3 {
          padding-bottom: 10px;
          font-size: 1.75rem;
          font-weight: 700;
        }
        .projects-icons {
          display: grid;
          grid-auto-flow: column;

          .icons {
            display: grid;
            justify-content: start;
            align-content: center;
            grid-auto-flow: column;
            .images-icons {
              margin-right: 10px;
              width: 1.75rem;
              height: auto;
              padding-top: 10px;
            }
          }
          .arrow-link {
            display: grid;
            justify-content: right;
            align-content: center;
            svg {
              width: 3rem;
              height: auto;
            }
          }
        }
        @media screen and (max-width: $small) {
          width: 80vw;
        }
      }
      .div-project:hover {
        transform: translate(4px, -4px);
        cursor: default;
        box-shadow: -7px 7px 0px 0px #403c35;
      }
      @media screen and (max-width: $h-small) {
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: 1fr 1fr 1fr 1fr;
        gap: 10px 10px;
        grid-template-areas:
          '.'
          '.'
          '.'
          '.';
        max-width: 300px;
      }
    }
  }
}

#about-me {
  p {
    max-width: 50vw;
    margin-left: 50px;
    font-size: 1rem;
    line-height: 32px;
    span {
      font-weight: 700;
    }
    @media screen and (max-width: $h-medium) {
      max-width: 60vw;
    }
    @media screen and (max-width: $medium) {
      max-width: 70vw;
    }
    @media screen and (max-width: $h-small) {
      max-width: 80vw;
    }
    @media screen and (max-width: $small) {
      max-width: 90vw;
    }
  }
  .title-main {
    .about-me-title {
      width: 165px;
    }
  }
}

#skills {
  p {
    max-width: 50vw;
    margin-left: 50px;
    font-size: 1rem;
    line-height: 32px;
    span {
      font-weight: 700;
    }
    @media screen and (max-width: $h-medium) {
      max-width: 60vw;
    }
    @media screen and (max-width: $medium) {
      max-width: 70vw;
    }
    @media screen and (max-width: $h-small) {
      max-width: 80vw;
    }
    @media screen and (max-width: $small) {
      max-width: 90vw;
    }
  }
  .title-main {
    .skill-title {
      width: 130px;
    }
  }
}

#contact {
  content: ''; /* This is necessary for the pseudo element to work. */
  display: block; /* This will put the pseudo element on its own line. */
  /* This will center the border. */
  width: 100%; /* Change this to whatever width you want. */
  padding-top: 2vw; /* This creates some space between the element and the border. */
  border-top: $linkBlack solid 1px; /* This creates the border. Replace black with whatever color you want. */

  h2 {
    font-size: 2rem;
  }
  .email-one {
    display: inline-flex;
    .email {
      padding-top: 32px;
      padding-bottom: 32px;
    }
    svg {
      width: 32px;
      transition: all 0.2s;
      transition-timing: ease-in-out;
      @media screen and (max-width: $small) {
        display: none;
      }
    }
    // svg:hover {
    //   transform: rotate(-45deg);
    // }
  }
  @media screen and (max-width: $small) {
    h2 {
      span {
        font-size: 1.5rem;
      }
    }
  }
}

#footer {
  content: ''; /* This is necessary for the pseudo element to work. */
  display: block; /* This will put the pseudo element on its own line. */
  /* This will center the border. */
  width: 100%; /* Change this to whatever width you want. */
  padding-bottom: 2vw; /* This creates some space between the element and the border. */
  border-top: $linkBlack solid 1px; /* This creates the border. Replace black with whatever color you want. */
  .cointainer-footer {
    display: grid;
    grid-template-columns: 1fr 1fr;
    padding-top: 10px;
    .left {
      display: inline-flex;
      svg {
        width: 16px;
        padding-left: 5px;
      }
      @media screen and (max-width: $medium) {
        display: none;
      }
    }
    .right {
      display: inline-flex;
      justify-items: end;
      grid-column-start: end;
      @media screen and (max-width: $medium) {
        justify-items: center;
        grid-column-start: auto;
      }
    }
  }
}
